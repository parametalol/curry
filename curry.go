// Code generated by curry generator; DO NOT EDIT.
package curry



func Head2R[T0, T1, R any](fn func(T0, T1) R) func(T0) func(T1) R {
	return func(arg0 T0) func(T1) R {
		return func(arg1 T1) R {
			return fn(arg0, arg1)
		}
	}
}


func Curry2R[T0, T1, R any](fn func(T0, T1) R) func(T0) func(T1) R {
	return func(arg0 T0) func(T1) R {
		return Head2R(fn)(arg0)
	}
}




func Head3R[T0, T1, T2, R any](fn func(T0, T1, T2) R) func(T0) func(T1, T2) R {
	return func(arg0 T0) func(T1, T2) R {
		return func(arg1 T1, arg2 T2) R {
			return fn(arg0, arg1, arg2)
		}
	}
}


func Curry3R[T0, T1, T2, R any](fn func(T0, T1, T2) R) func(T0) func(T1) func(T2) R {
	return func(arg0 T0) func(T1) func(T2) R {
		return Head2R(Head3R(fn)(arg0))
	}
}




func Head4R[T0, T1, T2, T3, R any](fn func(T0, T1, T2, T3) R) func(T0) func(T1, T2, T3) R {
	return func(arg0 T0) func(T1, T2, T3) R {
		return func(arg1 T1, arg2 T2, arg3 T3) R {
			return fn(arg0, arg1, arg2, arg3)
		}
	}
}


func Curry4R[T0, T1, T2, T3, R any](fn func(T0, T1, T2, T3) R) func(T0) func(T1) func(T2) func(T3) R {
	return func(arg0 T0) func(T1) func(T2) func(T3) R {
		return Head2R(Head3R(Head4R(fn)(arg0)))
	}
}




func Head5R[T0, T1, T2, T3, T4, R any](fn func(T0, T1, T2, T3, T4) R) func(T0) func(T1, T2, T3, T4) R {
	return func(arg0 T0) func(T1, T2, T3, T4) R {
		return func(arg1 T1, arg2 T2, arg3 T3, arg4 T4) R {
			return fn(arg0, arg1, arg2, arg3, arg4)
		}
	}
}


func Curry5R[T0, T1, T2, T3, T4, R any](fn func(T0, T1, T2, T3, T4) R) func(T0) func(T1) func(T2) func(T3) func(T4) R {
	return func(arg0 T0) func(T1) func(T2) func(T3) func(T4) R {
		return Head2R(Head3R(Head4R(Head5R(fn)(arg0))))
	}
}



// Code generated by curry generator; DO NOT EDIT.
package curry

// region: Head2

// Head2R returns a partially curried function of 2 parameter(s), returning one value.
func Head2R[T0, T1, R any](fn func(T0, T1) R) func(T0) func(T1) R {
	return func(arg0 T0) func(T1) R {
		return func(arg1 T1) R {
			return fn(arg0, arg1)
		}
	}
}

// Head2 returns a partially curried function of 2 parameter(s), returning no values.
func Head2[T0, T1 any](fn func(T0, T1)) func(T0) func(T1) {
	return func(arg0 T0) func(T1) {
		return func(arg1 T1) {
			fn(arg0, arg1)
		}
	}
}

// Head2R2 returns a partially curried function of 2 parameter(s), returning one value.
func Head2R2[T0, T1, R0, R1 any](fn func(T0, T1) (R0, R1)) func(T0) func(T1) (R0, R1) {
	return func(arg0 T0) func(T1) (R0, R1) {
		return func(arg1 T1) (R0, R1) {
			return fn(arg0, arg1)
		}
	}
}

// Head2SR returns a partially curried function of 2 parameter(s), returning one value.
func Head2SR[T0, T1, R any](fn func(T0, ...T1) R) func(T0) func(...T1) R {
	return func(arg0 T0) func(...T1) R {
		return func(arg1 ...T1) R {
			return fn(arg0, arg1...)
		}
	}
}

// Head2S returns a partially curried function of 2 parameter(s), returning no values.
func Head2S[T0, T1 any](fn func(T0, ...T1)) func(T0) func(...T1) {
	return func(arg0 T0) func(...T1) {
		return func(arg1 ...T1) {
			fn(arg0, arg1...)
		}
	}
}

// Head2SR2 returns a partially curried function of 2 parameter(s), returning two values.
func Head2SR2[T0, T1, R0, R1 any](fn func(T0, ...T1) (R0, R1)) func(T0) func(...T1) (R0, R1) {
	return func(arg0 T0) func(...T1) (R0, R1) {
		return func(arg1 ...T1) (R0, R1) {
			return fn(arg0, arg1...)
		}
	}
}

// region: Head3

// Head3R returns a partially curried function of 3 parameter(s), returning one value.
func Head3R[T0, T1, T2, R any](fn func(T0, T1, T2) R) func(T0) func(T1, T2) R {
	return func(arg0 T0) func(T1, T2) R {
		return func(arg1 T1, arg2 T2) R {
			return fn(arg0, arg1, arg2)
		}
	}
}

// Head3 returns a partially curried function of 3 parameter(s), returning no values.
func Head3[T0, T1, T2 any](fn func(T0, T1, T2)) func(T0) func(T1, T2) {
	return func(arg0 T0) func(T1, T2) {
		return func(arg1 T1, arg2 T2) {
			fn(arg0, arg1, arg2)
		}
	}
}

// Head3R2 returns a partially curried function of 3 parameter(s), returning one value.
func Head3R2[T0, T1, T2, R0, R1 any](fn func(T0, T1, T2) (R0, R1)) func(T0) func(T1, T2) (R0, R1) {
	return func(arg0 T0) func(T1, T2) (R0, R1) {
		return func(arg1 T1, arg2 T2) (R0, R1) {
			return fn(arg0, arg1, arg2)
		}
	}
}

// Head3SR returns a partially curried function of 3 parameter(s), returning one value.
func Head3SR[T0, T1, T2, R any](fn func(T0, T1, ...T2) R) func(T0) func(T1, ...T2) R {
	return func(arg0 T0) func(T1, ...T2) R {
		return func(arg1 T1, arg2 ...T2) R {
			return fn(arg0, arg1, arg2...)
		}
	}
}

// Head3S returns a partially curried function of 3 parameter(s), returning no values.
func Head3S[T0, T1, T2 any](fn func(T0, T1, ...T2)) func(T0) func(T1, ...T2) {
	return func(arg0 T0) func(T1, ...T2) {
		return func(arg1 T1, arg2 ...T2) {
			fn(arg0, arg1, arg2...)
		}
	}
}

// Head3SR2 returns a partially curried function of 3 parameter(s), returning two values.
func Head3SR2[T0, T1, T2, R0, R1 any](fn func(T0, T1, ...T2) (R0, R1)) func(T0) func(T1, ...T2) (R0, R1) {
	return func(arg0 T0) func(T1, ...T2) (R0, R1) {
		return func(arg1 T1, arg2 ...T2) (R0, R1) {
			return fn(arg0, arg1, arg2...)
		}
	}
}

// region: Head4

// Head4R returns a partially curried function of 4 parameter(s), returning one value.
func Head4R[T0, T1, T2, T3, R any](fn func(T0, T1, T2, T3) R) func(T0) func(T1, T2, T3) R {
	return func(arg0 T0) func(T1, T2, T3) R {
		return func(arg1 T1, arg2 T2, arg3 T3) R {
			return fn(arg0, arg1, arg2, arg3)
		}
	}
}

// Head4 returns a partially curried function of 4 parameter(s), returning no values.
func Head4[T0, T1, T2, T3 any](fn func(T0, T1, T2, T3)) func(T0) func(T1, T2, T3) {
	return func(arg0 T0) func(T1, T2, T3) {
		return func(arg1 T1, arg2 T2, arg3 T3) {
			fn(arg0, arg1, arg2, arg3)
		}
	}
}

// Head4R2 returns a partially curried function of 4 parameter(s), returning one value.
func Head4R2[T0, T1, T2, T3, R0, R1 any](fn func(T0, T1, T2, T3) (R0, R1)) func(T0) func(T1, T2, T3) (R0, R1) {
	return func(arg0 T0) func(T1, T2, T3) (R0, R1) {
		return func(arg1 T1, arg2 T2, arg3 T3) (R0, R1) {
			return fn(arg0, arg1, arg2, arg3)
		}
	}
}

// Head4SR returns a partially curried function of 4 parameter(s), returning one value.
func Head4SR[T0, T1, T2, T3, R any](fn func(T0, T1, T2, ...T3) R) func(T0) func(T1, T2, ...T3) R {
	return func(arg0 T0) func(T1, T2, ...T3) R {
		return func(arg1 T1, arg2 T2, arg3 ...T3) R {
			return fn(arg0, arg1, arg2, arg3...)
		}
	}
}

// Head4S returns a partially curried function of 4 parameter(s), returning no values.
func Head4S[T0, T1, T2, T3 any](fn func(T0, T1, T2, ...T3)) func(T0) func(T1, T2, ...T3) {
	return func(arg0 T0) func(T1, T2, ...T3) {
		return func(arg1 T1, arg2 T2, arg3 ...T3) {
			fn(arg0, arg1, arg2, arg3...)
		}
	}
}

// Head4SR2 returns a partially curried function of 4 parameter(s), returning two values.
func Head4SR2[T0, T1, T2, T3, R0, R1 any](fn func(T0, T1, T2, ...T3) (R0, R1)) func(T0) func(T1, T2, ...T3) (R0, R1) {
	return func(arg0 T0) func(T1, T2, ...T3) (R0, R1) {
		return func(arg1 T1, arg2 T2, arg3 ...T3) (R0, R1) {
			return fn(arg0, arg1, arg2, arg3...)
		}
	}
}

// region: Head5

// Head5R returns a partially curried function of 5 parameter(s), returning one value.
func Head5R[T0, T1, T2, T3, T4, R any](fn func(T0, T1, T2, T3, T4) R) func(T0) func(T1, T2, T3, T4) R {
	return func(arg0 T0) func(T1, T2, T3, T4) R {
		return func(arg1 T1, arg2 T2, arg3 T3, arg4 T4) R {
			return fn(arg0, arg1, arg2, arg3, arg4)
		}
	}
}

// Head5 returns a partially curried function of 5 parameter(s), returning no values.
func Head5[T0, T1, T2, T3, T4 any](fn func(T0, T1, T2, T3, T4)) func(T0) func(T1, T2, T3, T4) {
	return func(arg0 T0) func(T1, T2, T3, T4) {
		return func(arg1 T1, arg2 T2, arg3 T3, arg4 T4) {
			fn(arg0, arg1, arg2, arg3, arg4)
		}
	}
}

// Head5R2 returns a partially curried function of 5 parameter(s), returning one value.
func Head5R2[T0, T1, T2, T3, T4, R0, R1 any](fn func(T0, T1, T2, T3, T4) (R0, R1)) func(T0) func(T1, T2, T3, T4) (R0, R1) {
	return func(arg0 T0) func(T1, T2, T3, T4) (R0, R1) {
		return func(arg1 T1, arg2 T2, arg3 T3, arg4 T4) (R0, R1) {
			return fn(arg0, arg1, arg2, arg3, arg4)
		}
	}
}

// Head5SR returns a partially curried function of 5 parameter(s), returning one value.
func Head5SR[T0, T1, T2, T3, T4, R any](fn func(T0, T1, T2, T3, ...T4) R) func(T0) func(T1, T2, T3, ...T4) R {
	return func(arg0 T0) func(T1, T2, T3, ...T4) R {
		return func(arg1 T1, arg2 T2, arg3 T3, arg4 ...T4) R {
			return fn(arg0, arg1, arg2, arg3, arg4...)
		}
	}
}

// Head5S returns a partially curried function of 5 parameter(s), returning no values.
func Head5S[T0, T1, T2, T3, T4 any](fn func(T0, T1, T2, T3, ...T4)) func(T0) func(T1, T2, T3, ...T4) {
	return func(arg0 T0) func(T1, T2, T3, ...T4) {
		return func(arg1 T1, arg2 T2, arg3 T3, arg4 ...T4) {
			fn(arg0, arg1, arg2, arg3, arg4...)
		}
	}
}

// Head5SR2 returns a partially curried function of 5 parameter(s), returning two values.
func Head5SR2[T0, T1, T2, T3, T4, R0, R1 any](fn func(T0, T1, T2, T3, ...T4) (R0, R1)) func(T0) func(T1, T2, T3, ...T4) (R0, R1) {
	return func(arg0 T0) func(T1, T2, T3, ...T4) (R0, R1) {
		return func(arg1 T1, arg2 T2, arg3 T3, arg4 ...T4) (R0, R1) {
			return fn(arg0, arg1, arg2, arg3, arg4...)
		}
	}
}
